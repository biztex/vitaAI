generator client { provider = "prisma-client-js" }
datasource db { provider = "postgresql"; url = env("DATABASE_URL") }

model AppUser {
  supabaseUserId  String  @id
  email           String?
  role            Role     @default(USER)
  subscription    Subscription?
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt

  conversations   ChatConversation[]
  personality     PersonalityResult[]
}

model ChatConversation {
  id         String   @id @default(uuid())
  ownerId    String
  service    Service
  title      String?
  createdAt  DateTime @default(now())

  owner      AppUser  @relation(fields: [ownerId], references: [supabaseUserId])
  messages   ChatMessage[]
}

model ChatMessage {
  id              String   @id @default(uuid())
  conversationId  String
  sender          Sender
  kind            MessageKind
  content         String
  attachmentUrl   String?
  createdAt       DateTime @default(now())

  conversation    ChatConversation @relation(fields: [conversationId], references: [id])
}

model PersonalityResult {
  id        String   @id @default(uuid())
  ownerId   String
  testType  TestType
  fileKey   String
  status    Status   @default(RECEIVED)
  createdAt DateTime @default(now())

  owner     AppUser  @relation(fields: [ownerId], references: [supabaseUserId])
}

enum Role { USER ADMIN }
enum Subscription { vitaai execuwell integrated }
enum Service { vitaai execuwell }
enum Sender { user assistant }
enum MessageKind { text voice image }
enum TestType { _16personalities strengthsfinder }
enum Status { PENDING RECEIVED VERIFIED REJECTED }
